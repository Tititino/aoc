inp w    (input, /, /, z)
mul x 0  (input, 0, /, z)
add x z  (input, z, /, z)
mod x 26 (input, z mod 26, /, z)
div z 1  (input, z mod 26, /, z)
add x 11 (input, (z mod 26) + 11, /, z)

si? 
eql x w  (input, 1, /, z) 
eql x 0  (input, 0, /, z)
mul y 0  (input, 0, 0, z)
add y 25 (input, 0, 25, z)
mul y x  (input, 0, 0, z)
add y 1  (input, 0, 1, z)
mul z y  (input, 0, 1, z)
mul y 0  (input, 0, 0, z)
add y w  (input, 0, 0, z)
add y 7  (input, 0, 7, z)  <<<
mul y x  (input, 0, 0, z)
add z y  (input, 0, 0, z)

no?
eql x w  (input, 0, /, z) 
eql x 0  (input, 1, /, z)
mul y 0  (input, 1, 0, z)
add y 25 (input, 1, 25, z)
mul y x  (input, 1, 25, z)
add y 1  (input, 1, 26, z)
mul z y  (input, 1, 26, z * 26)
mul y 0  (input, 1, 0, z * 26)
add y w  (input, 1, input, z * 26)
add y 7  (input, 1, input + 7, z * 26)
mul y x  (input, input + 7, input + 7, z * 26)
add z y  (input, input + 7, input + 7, (z * 26) + input + 7)

NUM1 = 1

inp w    (input, 0, 0, 0)
mul x 0  (input, 0, 0, 0)
add x z  (input, 0, 0, 0)
mod x 26 (input, 0, 0, 0)
div z 1  (input, 0, 0, 0)
add x 14 (input, 14, 0, 0) 
eql x w  (input, 0, 0, 0)
eql x 0  (input, 1, 0, 0)
mul y 0  (input, 1, 0, 0)
add y 25 (input, 1, 25, 0)
mul y x  (input, 1, 25, 0)
add y 1  (input, 1, 26, 0)
mul z y  (input, 1, 26, 0)
mul y 0  (input, 1, 0, 0)
add y w  (input, 1, input, 0)
add y 8  (input, 1, input + 8, 0)
mul y x  (input, 1, input + 8, 0)
add z y  (input, 1, input + 8, input + 8)

inp w
mul x 0
add x z
mod x 26
div z 1
add x 10
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 16
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 26
add x -8
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 3
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 12
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 26
add x -11
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 1
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 1
add x 10
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 26
add x -6
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 26
add x -9
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 14
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 1
add x 12
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 4
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 26
add x -5
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 14
mul y x
add z y

inp w
mul x 0
add x z
mod x 26
div z 26
add x -4
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 15
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -9
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 6
mul y x
add z y

// analisi di cosa faccia
parte_prima(num1, num2) {
	inp w
	mul x 0
	add x z
	mod x 26
	div z num3
	add x num1
	eql x w
	eql x 0
	mul y 0
	add y 25
	mul y x
	add y 1
	mul z y
	mul y 0
	add y w
	add y num2 
	mul y x
	add z y
}
// 2
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8 <<
mul y x
add z y
// 3
inp w
mul x 0
add x z
mod x 26
div z 1
add x 10 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 16 <<
mul y x
add z y
// 4
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8 <<
mul y x
add z y
// 5
inp w
mul x 0
add x z
mod x 26
div z 26 <<
add x -8 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 3 <<
mul y x
add z y
// 6
inp w
mul x 0
add x z
mod x 26
div z 1  <<
add x 14 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 12 <<
mul y x
add z y
// 7
inp w
mul x 0
add x z
mod x 26
div z 26 <<
add x -11 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 1 <<
mul y x
add z y
// 8
inp w
mul x 0
add x z
mod x 26
div z 1 <<
add x 10 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8 <<
mul y x
add z y
// 9
inp w
mul x 0
add x z
mod x 26
div z 26 << 
add x -6 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8 <<
mul y x
add z y
// 10
inp w
mul x 0
add x z
mod x 26
div z 26 <<
add x -9 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 14 <<
mul y x
add z y
// 11
inp w
mul x 0
add x z
mod x 26
div z 1 <<
add x 12 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 4 <<
mul y x
add z y
// 12
inp w
mul x 0
add x z
mod x 26
div z 26 <<
add x -5 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 14 <<
mul y x
add z y
// 13
inp w
mul x 0
add x z
mod x 26
div z 26 <<
add x -4 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 15 <<
mul y x
add z y
// 14
inp w
mul x 0
add x z
mod x 26
div z 26 <<
add x -9 <<
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 6 <<
mul y x
add z y
